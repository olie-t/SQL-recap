-- create a proceedure that pulls the first 1000 employee records
drop procedure if exists select_employees;

delimiter $$
create procedure select_employees() 
begin 
		select * from employees
		limit 1000;
end$$ 
delimiter ; 


call employees.select_employees();

call select_employees();

-- create a proceedure that will provide the avg salary of all employees 

delimiter $$
create procedure average_salary()
begin
	SELECT 
		round(AVG(salary),2)
	FROM
		salaries;
end$$
delimiter ; 

call average_salary();

drop procedure select_employees;
-- create a stored proceedure that pulls average employee salary data based on their emp_no

delimiter $$
use employees $$
create procedure emp_avg_salary(in p_emp_no integer)
begin
select 
e.first_name, e.last_name, avg(s.salary)
	from employees e 
    join 
		salaries s 
        on e.emp_no = s.emp_no 
        where e.emp_no = p_emp_no;
end $$
delimiter $$

call emp_avg_salary(11300);

delimiter $$ 
create procedure emp_avg_salary_out (in p_emp_no integer, out p_avg_salary decimal (10,2))
begin 
select 
	avg(s.salary)
into p_avg_salary from
	employees e
		join
	salaries s on e.emp_no = s.emp_no
where
	e.emp_no = p_emp_no;
end$$

delimiter ;

call emp_avg_salary_out;

-- create a stored procedure that uses the first and last names as parameters and returns their employee number

delimiter $$
create procedure employee_number_find (in p_first_name varchar(255), p_last_name varchar(255), out p_emp_no integer)
begin 
select 
	e.emp_no
    into p_emp_no 
		from employees e
	where 
		e.first_name = p_first_name 
			and e.last_name = p_last_name;
end$$
delimiter ;
